name: "test"

on:
 workflow_dispatch:
 push:

jobs:
  test:
    name: "build test"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          # - ubuntu-20.04
        include:
          - os: windows-latest
            targetName: mingwX64
          # - os: ubuntu-20.04
          #   targetName: linuxX64
    env:
      isWindows: ${{ startsWith(matrix.os, 'windows') }}
      isUbuntu: ${{ startsWith(matrix.os, 'ubuntu') }}
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: Cache LLVM and Clang
      id: cache-llvm
      uses: actions/cache@v2
      with:
        path: ${{ runner.temp }}/llvm
        key: llvm-15.0
    - name: Install LLVM and Clang
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: "15.0"
        directory: ${{ runner.temp }}/llvm
        cached: ${{ steps.cache-llvm.outputs.cache-hit }}
    - name: build with gcc ubuntu
      if: ${{ env.isUbuntu == 'true' }}
      env:
        cc: ${{ runner.temp }}/llvm/clang
        cxx: ${{ runner.temp }}/llvm/clang++
      run: cd cpp && cmake . && make LoaderNative
    - name: build with gcc win
      if: ${{ env.isWindows == 'true' }}
      env:
        cc: ${{ runner.temp }}\llvm\bin\clang.exe
        cxx: ${{ runner.temp }}\llvm\bin\clang++.exe
      run: cd cpp && cmake -G "Ninja Multi-Config" . && cmake --build . --target LoaderNative
    - name: Set up JDK 15
      uses: actions/setup-java@v2
      with:
        java-version: '15'
        distribution: 'adopt'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        cache-read-only: ${{ github.ref != 'refs/heads/main' }}
    - name: Setup Memory Environment on Windows
      if: ${{ env.isWindows == 'true' }}
      run: >
        wmic pagefileset where name="D:\\pagefile.sys" set InitialSize=1024,MaximumSize=9216
      shell: cmd
      continue-on-error: true
    - name: chmod
      if: ${{ env.isUbuntu == 'true' }}
      run: chmod -R 777 *
    - name: replace llvm
      uses: Nambers/ReplaceStringInFile@v1.3
      with:
        path: ${{ github.workspace }}/kotlin/build.gradle.kts
        oldString: LLVM_REPLACE_FOR_GITHUB_WORKFLOW
        newString: ${{ runner.temp }}\llvm
        showFileContent: true
        escapeBackslash: true
    - name: replace lib path of def file
      uses: Nambers/ReplaceStringInFile@v1.3
      with:
        path: ${{ github.workspace }}/kotlin/src/nativeInterop/cinterop/lib.def
        oldString: GITHUB_WORKSPACE
        newString: ${{ github.workspace }}/cpp/Debug
        showFileContent: true
        escapeBackslash: true
    - name: replace header path of def file
      uses: Nambers/ReplaceStringInFile@v1.3
      with:
        path: ${{ github.workspace }}/kotlin/src/nativeInterop/cinterop/lib.def
        oldString: GITHUB_KTHEADER
        newString: ${{ github.workspace }}/kotlin/src/nativeInterop/cinterop
        showFileContent: true
        escapeBackslash: true
    - name: replace header path of def file
      uses: Nambers/ReplaceStringInFile@v1.3
      with:
        path: ${{ github.workspace }}/kotlin/src/nativeInterop/cinterop/lib.def
        oldString: libA.a
        newString: libA.a
        newStringWin: libA.lib
        showFileContent: true
    - name: run native
      run:  cd ./kotlin/ && ./gradlew :runDebugExecutableNative --warning-mode all --info --stacktrace
    